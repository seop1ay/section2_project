{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1-105Cb1600ekiBVJgOtFB7jSV1peoQHT","timestamp":1675785758632}],"authorship_tag":"ABX9TyNF8VVQqU9peCb//5nj1LGv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install category_encoders "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"agFgN4ILfvF5","executionInfo":{"status":"ok","timestamp":1675828951468,"user_tz":-540,"elapsed":4038,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"71715ece-67a7-4e57-c50e-459fbef90680"},"execution_count":184,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: category_encoders in /usr/local/lib/python3.8/dist-packages (2.6.0)\n","Requirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.8/dist-packages (from category_encoders) (0.5.3)\n","Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.8/dist-packages (from category_encoders) (1.0.2)\n","Requirement already satisfied: pandas>=1.0.5 in /usr/local/lib/python3.8/dist-packages (from category_encoders) (1.3.5)\n","Requirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.8/dist-packages (from category_encoders) (1.21.6)\n","Requirement already satisfied: scipy>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from category_encoders) (1.7.3)\n","Requirement already satisfied: statsmodels>=0.9.0 in /usr/local/lib/python3.8/dist-packages (from category_encoders) (0.12.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.5->category_encoders) (2022.7.1)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.5->category_encoders) (2.8.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.8/dist-packages (from patsy>=0.5.1->category_encoders) (1.15.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.8/dist-packages (from scikit-learn>=0.20.0->category_encoders) (1.2.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from scikit-learn>=0.20.0->category_encoders) (3.1.0)\n"]}]},{"cell_type":"code","source":["!pip3 install xgboost==1.7.2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EDgDZXnufxgB","executionInfo":{"status":"ok","timestamp":1675828956106,"user_tz":-540,"elapsed":4641,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"7f443269-fc0b-440a-cb30-346f7d780d82"},"execution_count":185,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: xgboost==1.7.2 in /usr/local/lib/python3.8/dist-packages (1.7.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from xgboost==1.7.2) (1.7.3)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from xgboost==1.7.2) (1.21.6)\n"]}]},{"cell_type":"code","source":["import warnings\n","warnings.filterwarnings(action='ignore')"],"metadata":{"id":"0_CRW7njf0vA","executionInfo":{"status":"ok","timestamp":1675828956106,"user_tz":-540,"elapsed":6,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":186,"outputs":[]},{"cell_type":"code","execution_count":187,"metadata":{"id":"8EuC3MbzSIiX","executionInfo":{"status":"ok","timestamp":1675828956106,"user_tz":-540,"elapsed":6,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from category_encoders import OrdinalEncoder\n","from xgboost import XGBClassifier\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import roc_curve, roc_auc_score\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from imblearn.under_sampling import RandomUnderSampler\n","from imblearn.over_sampling import SMOTE"]},{"cell_type":"markdown","source":["Rk -- 순위\n","\n","Pos -- 포지션\n","\n","Age -- 나이\n","\n","Tm --팀\n","\n","G -- 참여경기수\n","\n","GS -- 스타팅멤버횟수\n","\n","MP --플레이 시간\n","\n","FG -- 게임당 필드 골\n","\n","FGA -- 경기당 필드 골 시도\n","\n","FG% -- 필드 골 비율\n","\n","3P --3점 성공 갯수\n","\n","3PA -- 경기당 3점 야투 시도\n","\n","3P% -- 3점 야투 성공률\n","\n","2P -- 게임당 2점 필드 골 성공 갯수\n","\n","2PA -- 경기당 2점 야투 시도\n","\n","2P% -- 2점 필드 골 비율\n","\n","eFG% -- 효과적인 필드 골 백분율\n","\n","이 통계는 3점 필드 골이 2점 필드 골보다 1점 더 가치가 있다는 사실을 조정합니다.\n","\n","FT --게임당 자유투 성공 갯수\n","\n","FTA --게임당 자유투 시도\n","\n","FT% --자유투 성공확률\n","\n","ORB --경기당 공격 리바운드\n","\n","DRB --경기당 수비 리바운드\n","\n","TRB --총 리바운드\n","\n","AST --게임당 어시스트\n","\n","STL --게임당 스틸\n","\n","BLK --게임당 블록\n","\n","TOV --게임당 턴오버 갯수\n","\n","PF -- 게임당 개인 파울\n","\n","PTS -- 게임당 포인트"],"metadata":{"id":"tyMcfF4lWx39"}},{"cell_type":"code","source":["df1=pd.read_csv('nba.csv')"],"metadata":{"id":"BxqbpA_DwbJK","executionInfo":{"status":"ok","timestamp":1675837579717,"user_tz":-540,"elapsed":312,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":344,"outputs":[]},{"cell_type":"code","source":["df2=pd.read_csv('salary.csv')"],"metadata":{"id":"iIBtE60eTjER","executionInfo":{"status":"ok","timestamp":1675837580809,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":345,"outputs":[]},{"cell_type":"code","source":["df1.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w7-FBtg03c_p","executionInfo":{"status":"ok","timestamp":1675837582502,"user_tz":-540,"elapsed":523,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"e733a428-5585-4880-f2b9-c6e571da0369"},"execution_count":346,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 500 entries, 0 to 499\n","Data columns (total 30 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Rk      500 non-null    int64  \n"," 1   Player  500 non-null    object \n"," 2   Pos     500 non-null    object \n"," 3   Age     500 non-null    int64  \n"," 4   Tm      500 non-null    object \n"," 5   G       500 non-null    int64  \n"," 6   GS      500 non-null    int64  \n"," 7   MP      500 non-null    float64\n"," 8   FG      500 non-null    float64\n"," 9   FGA     500 non-null    float64\n"," 10  FG%     491 non-null    float64\n"," 11  3P      500 non-null    float64\n"," 12  3PA     500 non-null    float64\n"," 13  3P%     464 non-null    float64\n"," 14  2P      500 non-null    float64\n"," 15  2PA     500 non-null    float64\n"," 16  2P%     484 non-null    float64\n"," 17  eFG%    491 non-null    float64\n"," 18  FT      500 non-null    float64\n"," 19  FTA     500 non-null    float64\n"," 20  FT%     451 non-null    float64\n"," 21  ORB     500 non-null    float64\n"," 22  DRB     500 non-null    float64\n"," 23  TRB     500 non-null    float64\n"," 24  AST     500 non-null    float64\n"," 25  STL     500 non-null    float64\n"," 26  BLK     500 non-null    float64\n"," 27  TOV     500 non-null    float64\n"," 28  PF      500 non-null    float64\n"," 29  PTS     500 non-null    float64\n","dtypes: float64(23), int64(4), object(3)\n","memory usage: 117.3+ KB\n"]}]},{"cell_type":"code","source":["df1 = df1.drop(['Rk','Tm'],axis=1) #  필요없는 열제거"],"metadata":{"id":"Qxw6U9pSA4A9","executionInfo":{"status":"ok","timestamp":1675837583639,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":347,"outputs":[]},{"cell_type":"code","source":["df2.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sfOKvVQT-0E2","executionInfo":{"status":"ok","timestamp":1675837585073,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"26cfb021-2399-41fe-a87b-2875f5d5e785"},"execution_count":348,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 491 entries, 0 to 490\n","Data columns (total 4 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   Rk      491 non-null    int64 \n"," 1   Player  491 non-null    object\n"," 2   Tm      491 non-null    object\n"," 3   salary  491 non-null    int64 \n","dtypes: int64(2), object(2)\n","memory usage: 15.5+ KB\n"]}]},{"cell_type":"code","source":["df2 = df2.drop(['Rk','Tm'],axis=1)"],"metadata":{"id":"PF7aV1YyBTDP","executionInfo":{"status":"ok","timestamp":1675837586455,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":349,"outputs":[]},{"cell_type":"code","source":["df = pd.merge(df1,df2,on='Player')"],"metadata":{"id":"bPfp8GABT0bG","executionInfo":{"status":"ok","timestamp":1675837587446,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":350,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":679},"id":"CCH_wCSgT7j4","executionInfo":{"status":"ok","timestamp":1675837588407,"user_tz":-540,"elapsed":632,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"78f69a98-b087-416d-e7b2-b3d9149c8c68"},"execution_count":351,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       Player    Pos  Age   G  GS    MP   FG   FGA    FG%  \\\n","0            Precious Achiuwa      C   22  73  28  23.6  3.6   8.3  0.439   \n","1                Steven Adams      C   28  76  75  26.3  2.8   5.1  0.547   \n","2                 Bam Adebayo      C   24  56  56  32.6  7.3  13.0  0.557   \n","3                Santi Aldama     PF   21  32   0  11.3  1.7   4.1  0.402   \n","4    Nickeil Alexander-Walker     SG   23  65  21  22.6  3.9  10.5  0.372   \n","..                        ...    ...  ...  ..  ..   ...  ...   ...    ...   \n","349           Dennis Schr?der  SG-PG   28  64  29  28.7  4.9  11.3  0.431   \n","350            Alperen ?eng?n      C   19  72  13  20.7  3.5   7.3  0.474   \n","351             Collin Sexton     SG   23  11  11  28.7  6.2  13.7  0.450   \n","352             Landry Shamet     SG   24  69  14  20.8  2.8   7.0  0.394   \n","353            Day'Ron Sharpe     PF   20  32   8  12.2  2.7   4.7  0.577   \n","\n","      3P  ...  ORB  DRB   TRB  AST  STL  BLK  TOV   PF   PTS  salary  \n","0    0.8  ...  2.0  4.5   6.5  1.1  0.5  0.6  1.2  2.1   9.1    2840  \n","1    0.0  ...  4.6  5.4  10.0  3.4  0.9  0.8  1.5  2.0   6.9   17927  \n","2    0.0  ...  2.4  7.6  10.1  3.4  1.4  0.8  2.6  3.1  19.1   30352  \n","3    0.2  ...  1.0  1.7   2.7  0.7  0.2  0.3  0.5  1.1   4.1    2094  \n","4    1.6  ...  0.6  2.3   2.9  2.4  0.7  0.4  1.4  1.6  10.6    5010  \n","..   ...  ...  ...  ...   ...  ...  ...  ...  ...  ...   ...     ...  \n","349  1.3  ...  0.5  2.8   3.3  4.6  0.8  0.1  2.2  2.4  13.5    1836  \n","350  0.4  ...  1.9  3.5   5.5  2.6  0.8  0.9  2.0  3.0   9.6    3375  \n","351  1.0  ...  1.2  2.1   3.3  2.1  0.9  0.0  2.8  2.3  16.0   16500  \n","352  1.8  ...  0.2  1.6   1.8  1.6  0.4  0.1  0.6  1.3   8.3    9500  \n","353  0.1  ...  2.5  2.5   5.0  0.5  0.3  0.5  0.9  1.9   6.2    2109  \n","\n","[354 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-0d5d7fcb-25a9-4415-924c-f70501959d46\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>Pos</th>\n","      <th>Age</th>\n","      <th>G</th>\n","      <th>GS</th>\n","      <th>MP</th>\n","      <th>FG</th>\n","      <th>FGA</th>\n","      <th>FG%</th>\n","      <th>3P</th>\n","      <th>...</th>\n","      <th>ORB</th>\n","      <th>DRB</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>STL</th>\n","      <th>BLK</th>\n","      <th>TOV</th>\n","      <th>PF</th>\n","      <th>PTS</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Precious Achiuwa</td>\n","      <td>C</td>\n","      <td>22</td>\n","      <td>73</td>\n","      <td>28</td>\n","      <td>23.6</td>\n","      <td>3.6</td>\n","      <td>8.3</td>\n","      <td>0.439</td>\n","      <td>0.8</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>4.5</td>\n","      <td>6.5</td>\n","      <td>1.1</td>\n","      <td>0.5</td>\n","      <td>0.6</td>\n","      <td>1.2</td>\n","      <td>2.1</td>\n","      <td>9.1</td>\n","      <td>2840</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Steven Adams</td>\n","      <td>C</td>\n","      <td>28</td>\n","      <td>76</td>\n","      <td>75</td>\n","      <td>26.3</td>\n","      <td>2.8</td>\n","      <td>5.1</td>\n","      <td>0.547</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>4.6</td>\n","      <td>5.4</td>\n","      <td>10.0</td>\n","      <td>3.4</td>\n","      <td>0.9</td>\n","      <td>0.8</td>\n","      <td>1.5</td>\n","      <td>2.0</td>\n","      <td>6.9</td>\n","      <td>17927</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bam Adebayo</td>\n","      <td>C</td>\n","      <td>24</td>\n","      <td>56</td>\n","      <td>56</td>\n","      <td>32.6</td>\n","      <td>7.3</td>\n","      <td>13.0</td>\n","      <td>0.557</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>2.4</td>\n","      <td>7.6</td>\n","      <td>10.1</td>\n","      <td>3.4</td>\n","      <td>1.4</td>\n","      <td>0.8</td>\n","      <td>2.6</td>\n","      <td>3.1</td>\n","      <td>19.1</td>\n","      <td>30352</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Santi Aldama</td>\n","      <td>PF</td>\n","      <td>21</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>11.3</td>\n","      <td>1.7</td>\n","      <td>4.1</td>\n","      <td>0.402</td>\n","      <td>0.2</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.7</td>\n","      <td>2.7</td>\n","      <td>0.7</td>\n","      <td>0.2</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>1.1</td>\n","      <td>4.1</td>\n","      <td>2094</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Nickeil Alexander-Walker</td>\n","      <td>SG</td>\n","      <td>23</td>\n","      <td>65</td>\n","      <td>21</td>\n","      <td>22.6</td>\n","      <td>3.9</td>\n","      <td>10.5</td>\n","      <td>0.372</td>\n","      <td>1.6</td>\n","      <td>...</td>\n","      <td>0.6</td>\n","      <td>2.3</td>\n","      <td>2.9</td>\n","      <td>2.4</td>\n","      <td>0.7</td>\n","      <td>0.4</td>\n","      <td>1.4</td>\n","      <td>1.6</td>\n","      <td>10.6</td>\n","      <td>5010</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>349</th>\n","      <td>Dennis Schr?der</td>\n","      <td>SG-PG</td>\n","      <td>28</td>\n","      <td>64</td>\n","      <td>29</td>\n","      <td>28.7</td>\n","      <td>4.9</td>\n","      <td>11.3</td>\n","      <td>0.431</td>\n","      <td>1.3</td>\n","      <td>...</td>\n","      <td>0.5</td>\n","      <td>2.8</td>\n","      <td>3.3</td>\n","      <td>4.6</td>\n","      <td>0.8</td>\n","      <td>0.1</td>\n","      <td>2.2</td>\n","      <td>2.4</td>\n","      <td>13.5</td>\n","      <td>1836</td>\n","    </tr>\n","    <tr>\n","      <th>350</th>\n","      <td>Alperen ?eng?n</td>\n","      <td>C</td>\n","      <td>19</td>\n","      <td>72</td>\n","      <td>13</td>\n","      <td>20.7</td>\n","      <td>3.5</td>\n","      <td>7.3</td>\n","      <td>0.474</td>\n","      <td>0.4</td>\n","      <td>...</td>\n","      <td>1.9</td>\n","      <td>3.5</td>\n","      <td>5.5</td>\n","      <td>2.6</td>\n","      <td>0.8</td>\n","      <td>0.9</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>9.6</td>\n","      <td>3375</td>\n","    </tr>\n","    <tr>\n","      <th>351</th>\n","      <td>Collin Sexton</td>\n","      <td>SG</td>\n","      <td>23</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>28.7</td>\n","      <td>6.2</td>\n","      <td>13.7</td>\n","      <td>0.450</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.2</td>\n","      <td>2.1</td>\n","      <td>3.3</td>\n","      <td>2.1</td>\n","      <td>0.9</td>\n","      <td>0.0</td>\n","      <td>2.8</td>\n","      <td>2.3</td>\n","      <td>16.0</td>\n","      <td>16500</td>\n","    </tr>\n","    <tr>\n","      <th>352</th>\n","      <td>Landry Shamet</td>\n","      <td>SG</td>\n","      <td>24</td>\n","      <td>69</td>\n","      <td>14</td>\n","      <td>20.8</td>\n","      <td>2.8</td>\n","      <td>7.0</td>\n","      <td>0.394</td>\n","      <td>1.8</td>\n","      <td>...</td>\n","      <td>0.2</td>\n","      <td>1.6</td>\n","      <td>1.8</td>\n","      <td>1.6</td>\n","      <td>0.4</td>\n","      <td>0.1</td>\n","      <td>0.6</td>\n","      <td>1.3</td>\n","      <td>8.3</td>\n","      <td>9500</td>\n","    </tr>\n","    <tr>\n","      <th>353</th>\n","      <td>Day'Ron Sharpe</td>\n","      <td>PF</td>\n","      <td>20</td>\n","      <td>32</td>\n","      <td>8</td>\n","      <td>12.2</td>\n","      <td>2.7</td>\n","      <td>4.7</td>\n","      <td>0.577</td>\n","      <td>0.1</td>\n","      <td>...</td>\n","      <td>2.5</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>0.5</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>0.9</td>\n","      <td>1.9</td>\n","      <td>6.2</td>\n","      <td>2109</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>354 rows × 29 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d5d7fcb-25a9-4415-924c-f70501959d46')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0d5d7fcb-25a9-4415-924c-f70501959d46 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0d5d7fcb-25a9-4415-924c-f70501959d46');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":351}]},{"cell_type":"code","source":["saltop = df.sort_values(by=['salary'],ascending=False)"],"metadata":{"id":"T6bjzY0fU9hF","executionInfo":{"status":"ok","timestamp":1675837590491,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":352,"outputs":[]},{"cell_type":"code","source":["saltop"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"id":"7pEA4F5SVJFJ","executionInfo":{"status":"ok","timestamp":1675837591405,"user_tz":-540,"elapsed":3,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"b21f086c-903d-4421-ee31-46024ede5cb1"},"execution_count":353,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Player Pos  Age   G  GS    MP    FG   FGA    FG%   3P  ...  ORB  \\\n","90     Stephen Curry  PG   33  64  64  34.5   8.4  19.1  0.437  4.5  ...  0.5   \n","190     LeBron James  PF   37  56  56  37.2  11.4  21.8  0.524  2.9  ...  1.1   \n","106     Kevin Durant  PF   33  55  55  37.2  10.5  20.3  0.518  2.1  ...  0.5   \n","33      Bradley Beal  SG   28  40  40  36.0   8.7  19.3  0.451  1.6  ...  1.0   \n","128      Paul George  PF   31  31  31  34.7   8.6  20.5  0.421  2.9  ...  0.4   \n","..               ...  ..  ...  ..  ..   ...   ...   ...    ...  ...  ...  ...   \n","28    Charles Bassey   C   21  23   0   7.3   1.3   2.0  0.638  0.0  ...  1.0   \n","347        Matt Ryan  SF   24   1   0   5.0   1.0   5.0  0.200  1.0  ...  0.0   \n","328  Jahmi'us Ramsey  SG   20  19   0   7.1   1.3   3.1  0.414  0.3  ...  0.2   \n","247     Kelan Martin  SF   26  30   1  15.0   2.3   5.7  0.409  0.7  ...  0.6   \n","252      Skylar Mays  SG   24  28   5   7.9   1.1   2.3  0.500  0.3  ...  0.2   \n","\n","     DRB  TRB  AST  STL  BLK  TOV   PF   PTS  salary  \n","90   4.7  5.2  6.3  1.3  0.4  3.2  2.0  25.5   48070  \n","190  7.1  8.2  6.2  1.3  1.1  3.5  2.2  30.3   44475  \n","106  6.9  7.4  6.4  0.9  0.9  3.5  2.1  29.9   44120  \n","33   3.8  4.7  6.6  0.9  0.4  3.4  2.4  23.2   43279  \n","128  6.5  6.9  5.7  2.2  0.4  4.1  2.4  24.3   42492  \n","..   ...  ...  ...  ...  ...  ...  ...   ...     ...  \n","28   1.7  2.7  0.3  0.2  0.7  0.3  1.4   3.0      75  \n","347  0.0  0.0  0.0  1.0  0.0  0.0  0.0   3.0       0  \n","328  0.5  0.7  0.4  0.1  0.1  0.3  0.5   3.2       0  \n","247  1.3  1.8  0.7  0.4  0.3  0.5  1.2   5.7       0  \n","252  0.7  0.9  0.6  0.3  0.0  0.4  0.3   2.9       0  \n","\n","[354 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-5d4009e7-ef91-4255-8e30-08ae1f4cd5eb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>Pos</th>\n","      <th>Age</th>\n","      <th>G</th>\n","      <th>GS</th>\n","      <th>MP</th>\n","      <th>FG</th>\n","      <th>FGA</th>\n","      <th>FG%</th>\n","      <th>3P</th>\n","      <th>...</th>\n","      <th>ORB</th>\n","      <th>DRB</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>STL</th>\n","      <th>BLK</th>\n","      <th>TOV</th>\n","      <th>PF</th>\n","      <th>PTS</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>90</th>\n","      <td>Stephen Curry</td>\n","      <td>PG</td>\n","      <td>33</td>\n","      <td>64</td>\n","      <td>64</td>\n","      <td>34.5</td>\n","      <td>8.4</td>\n","      <td>19.1</td>\n","      <td>0.437</td>\n","      <td>4.5</td>\n","      <td>...</td>\n","      <td>0.5</td>\n","      <td>4.7</td>\n","      <td>5.2</td>\n","      <td>6.3</td>\n","      <td>1.3</td>\n","      <td>0.4</td>\n","      <td>3.2</td>\n","      <td>2.0</td>\n","      <td>25.5</td>\n","      <td>48070</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>LeBron James</td>\n","      <td>PF</td>\n","      <td>37</td>\n","      <td>56</td>\n","      <td>56</td>\n","      <td>37.2</td>\n","      <td>11.4</td>\n","      <td>21.8</td>\n","      <td>0.524</td>\n","      <td>2.9</td>\n","      <td>...</td>\n","      <td>1.1</td>\n","      <td>7.1</td>\n","      <td>8.2</td>\n","      <td>6.2</td>\n","      <td>1.3</td>\n","      <td>1.1</td>\n","      <td>3.5</td>\n","      <td>2.2</td>\n","      <td>30.3</td>\n","      <td>44475</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>Kevin Durant</td>\n","      <td>PF</td>\n","      <td>33</td>\n","      <td>55</td>\n","      <td>55</td>\n","      <td>37.2</td>\n","      <td>10.5</td>\n","      <td>20.3</td>\n","      <td>0.518</td>\n","      <td>2.1</td>\n","      <td>...</td>\n","      <td>0.5</td>\n","      <td>6.9</td>\n","      <td>7.4</td>\n","      <td>6.4</td>\n","      <td>0.9</td>\n","      <td>0.9</td>\n","      <td>3.5</td>\n","      <td>2.1</td>\n","      <td>29.9</td>\n","      <td>44120</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Bradley Beal</td>\n","      <td>SG</td>\n","      <td>28</td>\n","      <td>40</td>\n","      <td>40</td>\n","      <td>36.0</td>\n","      <td>8.7</td>\n","      <td>19.3</td>\n","      <td>0.451</td>\n","      <td>1.6</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>3.8</td>\n","      <td>4.7</td>\n","      <td>6.6</td>\n","      <td>0.9</td>\n","      <td>0.4</td>\n","      <td>3.4</td>\n","      <td>2.4</td>\n","      <td>23.2</td>\n","      <td>43279</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>Paul George</td>\n","      <td>PF</td>\n","      <td>31</td>\n","      <td>31</td>\n","      <td>31</td>\n","      <td>34.7</td>\n","      <td>8.6</td>\n","      <td>20.5</td>\n","      <td>0.421</td>\n","      <td>2.9</td>\n","      <td>...</td>\n","      <td>0.4</td>\n","      <td>6.5</td>\n","      <td>6.9</td>\n","      <td>5.7</td>\n","      <td>2.2</td>\n","      <td>0.4</td>\n","      <td>4.1</td>\n","      <td>2.4</td>\n","      <td>24.3</td>\n","      <td>42492</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Charles Bassey</td>\n","      <td>C</td>\n","      <td>21</td>\n","      <td>23</td>\n","      <td>0</td>\n","      <td>7.3</td>\n","      <td>1.3</td>\n","      <td>2.0</td>\n","      <td>0.638</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.7</td>\n","      <td>2.7</td>\n","      <td>0.3</td>\n","      <td>0.2</td>\n","      <td>0.7</td>\n","      <td>0.3</td>\n","      <td>1.4</td>\n","      <td>3.0</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>347</th>\n","      <td>Matt Ryan</td>\n","      <td>SF</td>\n","      <td>24</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>0.200</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>328</th>\n","      <td>Jahmi'us Ramsey</td>\n","      <td>SG</td>\n","      <td>20</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>7.1</td>\n","      <td>1.3</td>\n","      <td>3.1</td>\n","      <td>0.414</td>\n","      <td>0.3</td>\n","      <td>...</td>\n","      <td>0.2</td>\n","      <td>0.5</td>\n","      <td>0.7</td>\n","      <td>0.4</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>3.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>247</th>\n","      <td>Kelan Martin</td>\n","      <td>SF</td>\n","      <td>26</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>2.3</td>\n","      <td>5.7</td>\n","      <td>0.409</td>\n","      <td>0.7</td>\n","      <td>...</td>\n","      <td>0.6</td>\n","      <td>1.3</td>\n","      <td>1.8</td>\n","      <td>0.7</td>\n","      <td>0.4</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>1.2</td>\n","      <td>5.7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>252</th>\n","      <td>Skylar Mays</td>\n","      <td>SG</td>\n","      <td>24</td>\n","      <td>28</td>\n","      <td>5</td>\n","      <td>7.9</td>\n","      <td>1.1</td>\n","      <td>2.3</td>\n","      <td>0.500</td>\n","      <td>0.3</td>\n","      <td>...</td>\n","      <td>0.2</td>\n","      <td>0.7</td>\n","      <td>0.9</td>\n","      <td>0.6</td>\n","      <td>0.3</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>0.3</td>\n","      <td>2.9</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>354 rows × 29 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d4009e7-ef91-4255-8e30-08ae1f4cd5eb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5d4009e7-ef91-4255-8e30-08ae1f4cd5eb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5d4009e7-ef91-4255-8e30-08ae1f4cd5eb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":353}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iuNm2LzfVgNR","executionInfo":{"status":"ok","timestamp":1675837593745,"user_tz":-540,"elapsed":275,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"8ee1062d-a4a2-4706-984e-ca9d904df8c2"},"execution_count":354,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Player     0\n","Pos        0\n","Age        0\n","G          0\n","GS         0\n","MP         0\n","FG         0\n","FGA        0\n","FG%        0\n","3P         0\n","3PA        0\n","3P%       10\n","2P         0\n","2PA        0\n","2P%        1\n","eFG%       0\n","FT         0\n","FTA        0\n","FT%        7\n","ORB        0\n","DRB        0\n","TRB        0\n","AST        0\n","STL        0\n","BLK        0\n","TOV        0\n","PF         0\n","PTS        0\n","salary     0\n","dtype: int64"]},"metadata":{},"execution_count":354}]},{"cell_type":"code","source":["df=df.dropna()"],"metadata":{"id":"xAIX7_4uXu8w","executionInfo":{"status":"ok","timestamp":1675837595771,"user_tz":-540,"elapsed":275,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":355,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aoKBBBUtX61X","executionInfo":{"status":"ok","timestamp":1675837598552,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"956dbc32-046f-4071-b3b1-d0a94b7f093f"},"execution_count":356,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Player    0\n","Pos       0\n","Age       0\n","G         0\n","GS        0\n","MP        0\n","FG        0\n","FGA       0\n","FG%       0\n","3P        0\n","3PA       0\n","3P%       0\n","2P        0\n","2PA       0\n","2P%       0\n","eFG%      0\n","FT        0\n","FTA       0\n","FT%       0\n","ORB       0\n","DRB       0\n","TRB       0\n","AST       0\n","STL       0\n","BLK       0\n","TOV       0\n","PF        0\n","PTS       0\n","salary    0\n","dtype: int64"]},"metadata":{},"execution_count":356}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"57AqXvOEkoMT","executionInfo":{"status":"ok","timestamp":1675837600486,"user_tz":-540,"elapsed":437,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"86ea1352-ffaf-4d4a-f627-69f3aa42ed31"},"execution_count":357,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 337 entries, 0 to 353\n","Data columns (total 29 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Player  337 non-null    object \n"," 1   Pos     337 non-null    object \n"," 2   Age     337 non-null    int64  \n"," 3   G       337 non-null    int64  \n"," 4   GS      337 non-null    int64  \n"," 5   MP      337 non-null    float64\n"," 6   FG      337 non-null    float64\n"," 7   FGA     337 non-null    float64\n"," 8   FG%     337 non-null    float64\n"," 9   3P      337 non-null    float64\n"," 10  3PA     337 non-null    float64\n"," 11  3P%     337 non-null    float64\n"," 12  2P      337 non-null    float64\n"," 13  2PA     337 non-null    float64\n"," 14  2P%     337 non-null    float64\n"," 15  eFG%    337 non-null    float64\n"," 16  FT      337 non-null    float64\n"," 17  FTA     337 non-null    float64\n"," 18  FT%     337 non-null    float64\n"," 19  ORB     337 non-null    float64\n"," 20  DRB     337 non-null    float64\n"," 21  TRB     337 non-null    float64\n"," 22  AST     337 non-null    float64\n"," 23  STL     337 non-null    float64\n"," 24  BLK     337 non-null    float64\n"," 25  TOV     337 non-null    float64\n"," 26  PF      337 non-null    float64\n"," 27  PTS     337 non-null    float64\n"," 28  salary  337 non-null    int64  \n","dtypes: float64(23), int64(4), object(2)\n","memory usage: 79.0+ KB\n"]}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1c5xPhhaYAyY","executionInfo":{"status":"ok","timestamp":1675837607112,"user_tz":-540,"elapsed":300,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"deb04d0e-75d3-44c0-eca5-1b4e6e1bcc39"},"execution_count":358,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7"]},"metadata":{},"execution_count":358}]},{"cell_type":"code","source":["df = df.drop_duplicates()"],"metadata":{"id":"6R6ZkOLkYPjv","executionInfo":{"status":"ok","timestamp":1675837609079,"user_tz":-540,"elapsed":412,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":359,"outputs":[]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w9NUCmy-YW8C","executionInfo":{"status":"ok","timestamp":1675837612326,"user_tz":-540,"elapsed":544,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"cb1fcc2b-a80a-4c2a-b54a-6fcc38bbc943"},"execution_count":360,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":360}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"vvDCkhgzadgv","executionInfo":{"status":"ok","timestamp":1675837614423,"user_tz":-540,"elapsed":329,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"40ecb92f-768b-4090-d5a0-9da74d9a8bdf"},"execution_count":361,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Age           G          GS          MP          FG         FGA  \\\n","count  330.000000  330.000000  330.000000  330.000000  330.000000  330.000000   \n","mean    25.927273   55.381818   29.136364   23.033939    3.930606    8.553030   \n","std      4.353057   18.956027   26.739817    8.333136    2.250377    4.771031   \n","min     19.000000    2.000000    0.000000    3.000000    0.400000    0.700000   \n","25%     22.000000   45.000000    5.000000   16.825000    2.325000    4.925000   \n","50%     25.000000   60.500000   19.000000   23.150000    3.400000    7.350000   \n","75%     29.000000   70.000000   55.750000   29.800000    5.375000   11.300000   \n","max     41.000000   82.000000   82.000000   37.600000   11.400000   21.800000   \n","\n","              FG%          3P         3PA         3P%  ...         ORB  \\\n","count  330.000000  330.000000  330.000000  330.000000  ...  330.000000   \n","mean     0.461894    1.211515    3.424545    0.329873  ...    0.942424   \n","std      0.070269    0.884614    2.316645    0.096937  ...    0.725032   \n","min      0.296000    0.000000    0.000000    0.000000  ...    0.000000   \n","25%      0.412500    0.500000    1.600000    0.306000  ...    0.425000   \n","50%      0.452000    1.050000    3.100000    0.341500  ...    0.700000   \n","75%      0.494500    1.800000    5.100000    0.378750  ...    1.200000   \n","max      0.713000    4.500000   11.700000    1.000000  ...    4.600000   \n","\n","              DRB         TRB         AST         STL         BLK         TOV  \\\n","count  330.000000  330.000000  330.000000  330.000000  330.000000  330.000000   \n","mean     3.224242    4.169091    2.404242    0.731515    0.436970    1.274242   \n","std      1.810797    2.335679    1.964312    0.383125    0.368555    0.851444   \n","min      0.400000    0.500000    0.100000    0.000000    0.000000    0.000000   \n","25%      2.000000    2.600000    1.000000    0.500000    0.200000    0.700000   \n","50%      2.900000    3.700000    1.800000    0.700000    0.300000    1.000000   \n","75%      4.000000    5.200000    3.250000    0.975000    0.500000    1.600000   \n","max     11.000000   14.700000   10.800000    2.200000    2.300000    4.500000   \n","\n","               PF        PTS        salary  \n","count  330.000000  330.00000    330.000000  \n","mean     1.846970   10.73303  10139.045455  \n","std      0.664748    6.27462  10708.751539  \n","min      0.300000    1.00000      0.000000  \n","25%      1.300000    6.20000   2136.250000  \n","50%      1.900000    9.20000   5789.000000  \n","75%      2.400000   14.67500  14113.750000  \n","max      3.500000   30.60000  48070.000000  \n","\n","[8 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-9d229361-c57f-4577-8744-9fd3df82be99\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>G</th>\n","      <th>GS</th>\n","      <th>MP</th>\n","      <th>FG</th>\n","      <th>FGA</th>\n","      <th>FG%</th>\n","      <th>3P</th>\n","      <th>3PA</th>\n","      <th>3P%</th>\n","      <th>...</th>\n","      <th>ORB</th>\n","      <th>DRB</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>STL</th>\n","      <th>BLK</th>\n","      <th>TOV</th>\n","      <th>PF</th>\n","      <th>PTS</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>...</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.000000</td>\n","      <td>330.00000</td>\n","      <td>330.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>25.927273</td>\n","      <td>55.381818</td>\n","      <td>29.136364</td>\n","      <td>23.033939</td>\n","      <td>3.930606</td>\n","      <td>8.553030</td>\n","      <td>0.461894</td>\n","      <td>1.211515</td>\n","      <td>3.424545</td>\n","      <td>0.329873</td>\n","      <td>...</td>\n","      <td>0.942424</td>\n","      <td>3.224242</td>\n","      <td>4.169091</td>\n","      <td>2.404242</td>\n","      <td>0.731515</td>\n","      <td>0.436970</td>\n","      <td>1.274242</td>\n","      <td>1.846970</td>\n","      <td>10.73303</td>\n","      <td>10139.045455</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>4.353057</td>\n","      <td>18.956027</td>\n","      <td>26.739817</td>\n","      <td>8.333136</td>\n","      <td>2.250377</td>\n","      <td>4.771031</td>\n","      <td>0.070269</td>\n","      <td>0.884614</td>\n","      <td>2.316645</td>\n","      <td>0.096937</td>\n","      <td>...</td>\n","      <td>0.725032</td>\n","      <td>1.810797</td>\n","      <td>2.335679</td>\n","      <td>1.964312</td>\n","      <td>0.383125</td>\n","      <td>0.368555</td>\n","      <td>0.851444</td>\n","      <td>0.664748</td>\n","      <td>6.27462</td>\n","      <td>10708.751539</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>19.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>0.400000</td>\n","      <td>0.700000</td>\n","      <td>0.296000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.400000</td>\n","      <td>0.500000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.300000</td>\n","      <td>1.00000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>22.000000</td>\n","      <td>45.000000</td>\n","      <td>5.000000</td>\n","      <td>16.825000</td>\n","      <td>2.325000</td>\n","      <td>4.925000</td>\n","      <td>0.412500</td>\n","      <td>0.500000</td>\n","      <td>1.600000</td>\n","      <td>0.306000</td>\n","      <td>...</td>\n","      <td>0.425000</td>\n","      <td>2.000000</td>\n","      <td>2.600000</td>\n","      <td>1.000000</td>\n","      <td>0.500000</td>\n","      <td>0.200000</td>\n","      <td>0.700000</td>\n","      <td>1.300000</td>\n","      <td>6.20000</td>\n","      <td>2136.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>25.000000</td>\n","      <td>60.500000</td>\n","      <td>19.000000</td>\n","      <td>23.150000</td>\n","      <td>3.400000</td>\n","      <td>7.350000</td>\n","      <td>0.452000</td>\n","      <td>1.050000</td>\n","      <td>3.100000</td>\n","      <td>0.341500</td>\n","      <td>...</td>\n","      <td>0.700000</td>\n","      <td>2.900000</td>\n","      <td>3.700000</td>\n","      <td>1.800000</td>\n","      <td>0.700000</td>\n","      <td>0.300000</td>\n","      <td>1.000000</td>\n","      <td>1.900000</td>\n","      <td>9.20000</td>\n","      <td>5789.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>29.000000</td>\n","      <td>70.000000</td>\n","      <td>55.750000</td>\n","      <td>29.800000</td>\n","      <td>5.375000</td>\n","      <td>11.300000</td>\n","      <td>0.494500</td>\n","      <td>1.800000</td>\n","      <td>5.100000</td>\n","      <td>0.378750</td>\n","      <td>...</td>\n","      <td>1.200000</td>\n","      <td>4.000000</td>\n","      <td>5.200000</td>\n","      <td>3.250000</td>\n","      <td>0.975000</td>\n","      <td>0.500000</td>\n","      <td>1.600000</td>\n","      <td>2.400000</td>\n","      <td>14.67500</td>\n","      <td>14113.750000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>41.000000</td>\n","      <td>82.000000</td>\n","      <td>82.000000</td>\n","      <td>37.600000</td>\n","      <td>11.400000</td>\n","      <td>21.800000</td>\n","      <td>0.713000</td>\n","      <td>4.500000</td>\n","      <td>11.700000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>4.600000</td>\n","      <td>11.000000</td>\n","      <td>14.700000</td>\n","      <td>10.800000</td>\n","      <td>2.200000</td>\n","      <td>2.300000</td>\n","      <td>4.500000</td>\n","      <td>3.500000</td>\n","      <td>30.60000</td>\n","      <td>48070.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 27 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d229361-c57f-4577-8744-9fd3df82be99')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9d229361-c57f-4577-8744-9fd3df82be99 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9d229361-c57f-4577-8744-9fd3df82be99');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":361}]},{"cell_type":"code","source":["df.loc[df['salary']==0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":289},"id":"XK11PuFIawhX","executionInfo":{"status":"ok","timestamp":1675837623207,"user_tz":-540,"elapsed":504,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"be275086-9838-43b1-c780-c303aec0279f"},"execution_count":362,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Player Pos  Age   G  GS    MP   FG  FGA    FG%   3P  ...  ORB  \\\n","247     Kelan Martin  SF   26  30   1  15.0  2.3  5.7  0.409  0.7  ...  0.6   \n","252      Skylar Mays  SG   24  28   5   7.9  1.1  2.3  0.500  0.3  ...  0.2   \n","328  Jahmi'us Ramsey  SG   20  19   0   7.1  1.3  3.1  0.414  0.3  ...  0.2   \n","\n","     DRB  TRB  AST  STL  BLK  TOV   PF  PTS  salary  \n","247  1.3  1.8  0.7  0.4  0.3  0.5  1.2  5.7       0  \n","252  0.7  0.9  0.6  0.3  0.0  0.4  0.3  2.9       0  \n","328  0.5  0.7  0.4  0.1  0.1  0.3  0.5  3.2       0  \n","\n","[3 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-74f9f332-4870-4af5-9b0b-7dacbaf015f5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>Pos</th>\n","      <th>Age</th>\n","      <th>G</th>\n","      <th>GS</th>\n","      <th>MP</th>\n","      <th>FG</th>\n","      <th>FGA</th>\n","      <th>FG%</th>\n","      <th>3P</th>\n","      <th>...</th>\n","      <th>ORB</th>\n","      <th>DRB</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>STL</th>\n","      <th>BLK</th>\n","      <th>TOV</th>\n","      <th>PF</th>\n","      <th>PTS</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>247</th>\n","      <td>Kelan Martin</td>\n","      <td>SF</td>\n","      <td>26</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>2.3</td>\n","      <td>5.7</td>\n","      <td>0.409</td>\n","      <td>0.7</td>\n","      <td>...</td>\n","      <td>0.6</td>\n","      <td>1.3</td>\n","      <td>1.8</td>\n","      <td>0.7</td>\n","      <td>0.4</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>1.2</td>\n","      <td>5.7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>252</th>\n","      <td>Skylar Mays</td>\n","      <td>SG</td>\n","      <td>24</td>\n","      <td>28</td>\n","      <td>5</td>\n","      <td>7.9</td>\n","      <td>1.1</td>\n","      <td>2.3</td>\n","      <td>0.500</td>\n","      <td>0.3</td>\n","      <td>...</td>\n","      <td>0.2</td>\n","      <td>0.7</td>\n","      <td>0.9</td>\n","      <td>0.6</td>\n","      <td>0.3</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>0.3</td>\n","      <td>2.9</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>328</th>\n","      <td>Jahmi'us Ramsey</td>\n","      <td>SG</td>\n","      <td>20</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>7.1</td>\n","      <td>1.3</td>\n","      <td>3.1</td>\n","      <td>0.414</td>\n","      <td>0.3</td>\n","      <td>...</td>\n","      <td>0.2</td>\n","      <td>0.5</td>\n","      <td>0.7</td>\n","      <td>0.4</td>\n","      <td>0.1</td>\n","      <td>0.1</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>3.2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 29 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74f9f332-4870-4af5-9b0b-7dacbaf015f5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-74f9f332-4870-4af5-9b0b-7dacbaf015f5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-74f9f332-4870-4af5-9b0b-7dacbaf015f5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":362}]},{"cell_type":"code","source":["df= df[df['salary']!=0]"],"metadata":{"id":"uRH0S_7Da5L7","executionInfo":{"status":"ok","timestamp":1675837624732,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":363,"outputs":[]},{"cell_type":"code","source":["df.loc[df['salary']==0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"08VlFouda-R9","executionInfo":{"status":"ok","timestamp":1675837626038,"user_tz":-540,"elapsed":2,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"b6664f72-eb17-4407-de73-618132e1d771"},"execution_count":364,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [Player, Pos, Age, G, GS, MP, FG, FGA, FG%, 3P, 3PA, 3P%, 2P, 2PA, 2P%, eFG%, FT, FTA, FT%, ORB, DRB, TRB, AST, STL, BLK, TOV, PF, PTS, salary]\n","Index: []\n","\n","[0 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-7227ef2f-d45c-4456-83be-c2944ac1bb39\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>Pos</th>\n","      <th>Age</th>\n","      <th>G</th>\n","      <th>GS</th>\n","      <th>MP</th>\n","      <th>FG</th>\n","      <th>FGA</th>\n","      <th>FG%</th>\n","      <th>3P</th>\n","      <th>...</th>\n","      <th>ORB</th>\n","      <th>DRB</th>\n","      <th>TRB</th>\n","      <th>AST</th>\n","      <th>STL</th>\n","      <th>BLK</th>\n","      <th>TOV</th>\n","      <th>PF</th>\n","      <th>PTS</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","<p>0 rows × 29 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7227ef2f-d45c-4456-83be-c2944ac1bb39')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7227ef2f-d45c-4456-83be-c2944ac1bb39 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7227ef2f-d45c-4456-83be-c2944ac1bb39');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":364}]},{"cell_type":"code","source":["target=\"salary\""],"metadata":{"id":"ogXCx85khhl_","executionInfo":{"status":"ok","timestamp":1675837628766,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":365,"outputs":[]},{"cell_type":"code","source":["df.corr()['salary'].sort_values(ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"teOvRtL-uVpi","executionInfo":{"status":"ok","timestamp":1675837631084,"user_tz":-540,"elapsed":357,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"05826689-ae3d-4a98-8cab-a73e9531de43"},"execution_count":366,"outputs":[{"output_type":"execute_result","data":{"text/plain":["salary    1.000000\n","PTS       0.789488\n","FG        0.777194\n","FGA       0.751994\n","FT        0.726895\n","FTA       0.714869\n","2PA       0.708613\n","2P        0.707349\n","MP        0.680512\n","TOV       0.670146\n","DRB       0.620321\n","AST       0.599603\n","GS        0.564563\n","TRB       0.535419\n","3PA       0.479786\n","STL       0.478038\n","3P        0.454724\n","PF        0.379297\n","Age       0.316687\n","BLK       0.314786\n","FT%       0.177228\n","ORB       0.177060\n","G         0.155723\n","FG%       0.105351\n","eFG%      0.086969\n","2P%       0.023343\n","3P%       0.018513\n","Name: salary, dtype: float64"]},"metadata":{},"execution_count":366}]},{"cell_type":"code","source":["heatmap_data =df[['salary','PTS','FG','FT','MP','TOV','AST','TRB','BLK','Age']]"],"metadata":{"id":"D0rKveo6u2uI","executionInfo":{"status":"ok","timestamp":1675837806065,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":373,"outputs":[]},{"cell_type":"code","source":["colormap = plt.cm.PuBu\n","plt.figure(figsize=(10, 10))\n","plt.title(\"salary corr \", y = 1.05, size = 10)\n","sns.heatmap(heatmap_data.astype(float).corr(), linewidths = 0.2, vmax = 1.0,\n","           square = True, cmap = colormap, linecolor = \"white\", annot = True, annot_kws = {\"size\" : 16})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":596},"id":"yjVH4nmCveaj","executionInfo":{"status":"ok","timestamp":1675837809079,"user_tz":-540,"elapsed":1094,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"22139179-d7ea-4b27-8fec-a2d448709bf3"},"execution_count":374,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd84c9309d0>"]},"metadata":{},"execution_count":374},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df.Pos.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nBW0RzmswCgq","executionInfo":{"status":"ok","timestamp":1675837936794,"user_tz":-540,"elapsed":462,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"8cfacd91-4c7e-4888-b996-31c7cc8eb964"},"execution_count":375,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['C', 'PF', 'SG', 'PG', 'SF', 'PG-SG', 'SG-PG', 'SF-SG', 'SG-SF',\n","       'C-PF', 'PF-C'], dtype=object)"]},"metadata":{},"execution_count":375}]},{"cell_type":"code","source":["df = df.replace({'PG-SG':'PG','SG-PG': 'SG','SF-SG': 'SF','SG-SF':'SG', 'C-PF': 'C','PF-C':'PF'})"],"metadata":{"id":"JBXL85UWwFay","executionInfo":{"status":"ok","timestamp":1675837937988,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":376,"outputs":[]},{"cell_type":"code","source":["df.Pos.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n9-3nNuQwQ5S","executionInfo":{"status":"ok","timestamp":1675837939457,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"29da553e-b503-4d75-b978-3ba521627b9f"},"execution_count":377,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['C', 'PF', 'SG', 'PG', 'SF'], dtype=object)"]},"metadata":{},"execution_count":377}]},{"cell_type":"code","source":["sns.boxplot(x=\"Pos\",y=\"salary\",data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"_GtOVwVy0dss","executionInfo":{"status":"ok","timestamp":1675828969652,"user_tz":-540,"elapsed":834,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"7351d23c-9ac3-4261-a3db-fa6119182782"},"execution_count":214,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd85251b1c0>"]},"metadata":{},"execution_count":214},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.boxplot(x=\"PTS\", y=\"salary\", data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"Xwz4inBavuCq","executionInfo":{"status":"ok","timestamp":1675837962808,"user_tz":-540,"elapsed":4756,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"5d50f7ff-e168-4303-e3a5-5196c2974d1d"},"execution_count":378,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd84c67f5b0>"]},"metadata":{},"execution_count":378},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.boxplot(x=\"AST\", y=\"salary\", data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"tzV1p2KP1Npr","executionInfo":{"status":"ok","timestamp":1675838027781,"user_tz":-540,"elapsed":1852,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"9d25608a-8a50-408d-eb16-37d25ec1be5f"},"execution_count":379,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd847c78fd0>"]},"metadata":{},"execution_count":379},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.boxplot(x=\"TRB\", y=\"salary\", data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"m_o5wsy31P_T","executionInfo":{"status":"ok","timestamp":1675838087526,"user_tz":-540,"elapsed":2030,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"3367850d-7219-4d9a-ad94-80e9cd3588a0"},"execution_count":380,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd847660460>"]},"metadata":{},"execution_count":380},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.boxplot(x=\"Pos\", y=\"MP\", data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"IZ8lv53t1SoL","executionInfo":{"status":"ok","timestamp":1675838962127,"user_tz":-540,"elapsed":305,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"ca2e0da8-eaaf-4e2e-d868-42a9ef3b4600"},"execution_count":381,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd846f57d00>"]},"metadata":{},"execution_count":381},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler, PolynomialFeatures\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso\n","from sklearn.preprocessing import OneHotEncoder"],"metadata":{"id":"D7oJF_Nm5v80","executionInfo":{"status":"ok","timestamp":1675838964197,"user_tz":-540,"elapsed":287,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":382,"outputs":[]},{"cell_type":"code","source":["X = df.drop(['salary','Player'], axis=1)\n","y = df.salary"],"metadata":{"id":"AJUTVugPwhb6","executionInfo":{"status":"ok","timestamp":1675839087936,"user_tz":-540,"elapsed":428,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":393,"outputs":[]},{"cell_type":"code","source":["ohe = OneHotEncoder()"],"metadata":{"id":"nyLWR4PJ5UOc","executionInfo":{"status":"ok","timestamp":1675839089104,"user_tz":-540,"elapsed":2,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":394,"outputs":[]},{"cell_type":"code","source":["ohe = OneHotEncoder(categories = [['C', 'PF', 'SG', 'PG', 'SF']])\n","X_ohe = pd.DataFrame(ohe.fit_transform(X['Pos'].to_frame()).toarray())\n","X_ohe.columns = ohe.get_feature_names(['Pos'])\n","X_ohe.index = X.index\n","X = pd.concat([X, X_ohe], axis=1).drop(['Pos'], axis=1)"],"metadata":{"id":"Uy4upVy16s1j","executionInfo":{"status":"ok","timestamp":1675839090116,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":395,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"9eeCJXXX7gvr","executionInfo":{"status":"ok","timestamp":1675839092854,"user_tz":-540,"elapsed":294,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"d523180b-7e18-4495-b87d-f95e98ca981f"},"execution_count":396,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Age   G  GS    MP   FG   FGA    FG%   3P  3PA    3P%  ...  STL  BLK  TOV  \\\n","0     22  73  28  23.6  3.6   8.3  0.439  0.8  2.1  0.359  ...  0.5  0.6  1.2   \n","1     28  76  75  26.3  2.8   5.1  0.547  0.0  0.0  0.000  ...  0.9  0.8  1.5   \n","2     24  56  56  32.6  7.3  13.0  0.557  0.0  0.1  0.000  ...  1.4  0.8  2.6   \n","3     21  32   0  11.3  1.7   4.1  0.402  0.2  1.5  0.125  ...  0.2  0.3  0.5   \n","4     23  65  21  22.6  3.9  10.5  0.372  1.6  5.2  0.311  ...  0.7  0.4  1.4   \n","..   ...  ..  ..   ...  ...   ...    ...  ...  ...    ...  ...  ...  ...  ...   \n","349   28  64  29  28.7  4.9  11.3  0.431  1.3  3.9  0.344  ...  0.8  0.1  2.2   \n","350   19  72  13  20.7  3.5   7.3  0.474  0.4  1.6  0.248  ...  0.8  0.9  2.0   \n","351   23  11  11  28.7  6.2  13.7  0.450  1.0  4.1  0.244  ...  0.9  0.0  2.8   \n","352   24  69  14  20.8  2.8   7.0  0.394  1.8  4.8  0.368  ...  0.4  0.1  0.6   \n","353   20  32   8  12.2  2.7   4.7  0.577  0.1  0.2  0.286  ...  0.3  0.5  0.9   \n","\n","      PF   PTS  Pos_C  Pos_PF  Pos_SG  Pos_PG  Pos_SF  \n","0    2.1   9.1    1.0     0.0     0.0     0.0     0.0  \n","1    2.0   6.9    1.0     0.0     0.0     0.0     0.0  \n","2    3.1  19.1    1.0     0.0     0.0     0.0     0.0  \n","3    1.1   4.1    0.0     1.0     0.0     0.0     0.0  \n","4    1.6  10.6    0.0     0.0     1.0     0.0     0.0  \n","..   ...   ...    ...     ...     ...     ...     ...  \n","349  2.4  13.5    0.0     0.0     1.0     0.0     0.0  \n","350  3.0   9.6    1.0     0.0     0.0     0.0     0.0  \n","351  2.3  16.0    0.0     0.0     1.0     0.0     0.0  \n","352  1.3   8.3    0.0     0.0     1.0     0.0     0.0  \n","353  1.9   6.2    0.0     1.0     0.0     0.0     0.0  \n","\n","[327 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-38145074-a8af-4e6f-a06f-a6392f5424c0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>G</th>\n","      <th>GS</th>\n","      <th>MP</th>\n","      <th>FG</th>\n","      <th>FGA</th>\n","      <th>FG%</th>\n","      <th>3P</th>\n","      <th>3PA</th>\n","      <th>3P%</th>\n","      <th>...</th>\n","      <th>STL</th>\n","      <th>BLK</th>\n","      <th>TOV</th>\n","      <th>PF</th>\n","      <th>PTS</th>\n","      <th>Pos_C</th>\n","      <th>Pos_PF</th>\n","      <th>Pos_SG</th>\n","      <th>Pos_PG</th>\n","      <th>Pos_SF</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22</td>\n","      <td>73</td>\n","      <td>28</td>\n","      <td>23.6</td>\n","      <td>3.6</td>\n","      <td>8.3</td>\n","      <td>0.439</td>\n","      <td>0.8</td>\n","      <td>2.1</td>\n","      <td>0.359</td>\n","      <td>...</td>\n","      <td>0.5</td>\n","      <td>0.6</td>\n","      <td>1.2</td>\n","      <td>2.1</td>\n","      <td>9.1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>28</td>\n","      <td>76</td>\n","      <td>75</td>\n","      <td>26.3</td>\n","      <td>2.8</td>\n","      <td>5.1</td>\n","      <td>0.547</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000</td>\n","      <td>...</td>\n","      <td>0.9</td>\n","      <td>0.8</td>\n","      <td>1.5</td>\n","      <td>2.0</td>\n","      <td>6.9</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>24</td>\n","      <td>56</td>\n","      <td>56</td>\n","      <td>32.6</td>\n","      <td>7.3</td>\n","      <td>13.0</td>\n","      <td>0.557</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>0.000</td>\n","      <td>...</td>\n","      <td>1.4</td>\n","      <td>0.8</td>\n","      <td>2.6</td>\n","      <td>3.1</td>\n","      <td>19.1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>21</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>11.3</td>\n","      <td>1.7</td>\n","      <td>4.1</td>\n","      <td>0.402</td>\n","      <td>0.2</td>\n","      <td>1.5</td>\n","      <td>0.125</td>\n","      <td>...</td>\n","      <td>0.2</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>1.1</td>\n","      <td>4.1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>23</td>\n","      <td>65</td>\n","      <td>21</td>\n","      <td>22.6</td>\n","      <td>3.9</td>\n","      <td>10.5</td>\n","      <td>0.372</td>\n","      <td>1.6</td>\n","      <td>5.2</td>\n","      <td>0.311</td>\n","      <td>...</td>\n","      <td>0.7</td>\n","      <td>0.4</td>\n","      <td>1.4</td>\n","      <td>1.6</td>\n","      <td>10.6</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>349</th>\n","      <td>28</td>\n","      <td>64</td>\n","      <td>29</td>\n","      <td>28.7</td>\n","      <td>4.9</td>\n","      <td>11.3</td>\n","      <td>0.431</td>\n","      <td>1.3</td>\n","      <td>3.9</td>\n","      <td>0.344</td>\n","      <td>...</td>\n","      <td>0.8</td>\n","      <td>0.1</td>\n","      <td>2.2</td>\n","      <td>2.4</td>\n","      <td>13.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>350</th>\n","      <td>19</td>\n","      <td>72</td>\n","      <td>13</td>\n","      <td>20.7</td>\n","      <td>3.5</td>\n","      <td>7.3</td>\n","      <td>0.474</td>\n","      <td>0.4</td>\n","      <td>1.6</td>\n","      <td>0.248</td>\n","      <td>...</td>\n","      <td>0.8</td>\n","      <td>0.9</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>9.6</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>351</th>\n","      <td>23</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>28.7</td>\n","      <td>6.2</td>\n","      <td>13.7</td>\n","      <td>0.450</td>\n","      <td>1.0</td>\n","      <td>4.1</td>\n","      <td>0.244</td>\n","      <td>...</td>\n","      <td>0.9</td>\n","      <td>0.0</td>\n","      <td>2.8</td>\n","      <td>2.3</td>\n","      <td>16.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>352</th>\n","      <td>24</td>\n","      <td>69</td>\n","      <td>14</td>\n","      <td>20.8</td>\n","      <td>2.8</td>\n","      <td>7.0</td>\n","      <td>0.394</td>\n","      <td>1.8</td>\n","      <td>4.8</td>\n","      <td>0.368</td>\n","      <td>...</td>\n","      <td>0.4</td>\n","      <td>0.1</td>\n","      <td>0.6</td>\n","      <td>1.3</td>\n","      <td>8.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>353</th>\n","      <td>20</td>\n","      <td>32</td>\n","      <td>8</td>\n","      <td>12.2</td>\n","      <td>2.7</td>\n","      <td>4.7</td>\n","      <td>0.577</td>\n","      <td>0.1</td>\n","      <td>0.2</td>\n","      <td>0.286</td>\n","      <td>...</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>0.9</td>\n","      <td>1.9</td>\n","      <td>6.2</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>327 rows × 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38145074-a8af-4e6f-a06f-a6392f5424c0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-38145074-a8af-4e6f-a06f-a6392f5424c0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-38145074-a8af-4e6f-a06f-a6392f5424c0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":396}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2, random_state = 2)"],"metadata":{"id":"oKDfx1wdwsaS","executionInfo":{"status":"ok","timestamp":1675839096989,"user_tz":-540,"elapsed":479,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":397,"outputs":[]},{"cell_type":"code","source":["X_train.shape, X_test.shape, y_train.shape, y_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"63vhbZEe6Bt7","executionInfo":{"status":"ok","timestamp":1675839098079,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"0e7adbf8-356c-4fc7-a30b-75bb5c0ac58c"},"execution_count":398,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((261, 31), (66, 31), (261,), (66,))"]},"metadata":{},"execution_count":398}]},{"cell_type":"code","source":["from sklearn.metrics import r2_score, mean_absolute_error , mean_squared_error\n","\n","baseline = [y_train.mean()] * len(y_train)\n","baseline_r2 = r2_score(y_train, baseline)\n","baseline_rmse = mean_squared_error(y_train, baseline)**0.5\n","print(f'기준모델의 r2_score: {baseline_r2}')\n","print(f'기준모델의 rmse : {baseline_rmse}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q9YzxsBM9V7b","executionInfo":{"status":"ok","timestamp":1675839099414,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"287ebb48-a968-4752-80ea-2eed01867b67"},"execution_count":399,"outputs":[{"output_type":"stream","name":"stdout","text":["기준모델의 r2_score: 0.0\n","기준모델의 rmse : 10785.726214252807\n"]}]},{"cell_type":"code","source":["def alg_fit(alg, X_train, y_train, X_test, name, y_true, df, rmse, r2):\n","    \n","    # Model selection\n","    mod = alg.fit(X_train, y_train)\n","    \n","    # Prediction\n","    y_pred = mod.predict(X_test)\n","    \n","    # Accuracy\n","    acc1 = round(rmse(y_test, y_pred), 4)\n","    acc2 = round(r2(y_test, y_pred), 4)\n","    \n","    # Accuracy table\n","    X_test['y_pred'] = mod.predict(X_test)\n","    df_acc = pd.merge(df, X_test, how = 'right')\n","    X_test.drop(['y_pred'], axis = 1, inplace = True)\n","    df_acc = df_acc[[name, y_true, 'y_pred']]\n","    df_acc.sort_values(by = y_true, ascending = False, inplace = True)\n","    df_acc['y_pred'] = df_acc['y_pred']\n","    \n","    return y_pred, acc1, acc2, df_acc"],"metadata":{"id":"c4QH5SXzG7YY","executionInfo":{"status":"ok","timestamp":1675839219013,"user_tz":-540,"elapsed":274,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":400,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","y_pred_lin, rmse_lin, r2_lin, df_acc_lin = alg_fit(LinearRegression(), X_train, y_train, X_test, 'Player', 'salary', \n","                                                  df, metrics.mean_squared_error, metrics.r2_score)"],"metadata":{"id":"lmdmg14sHGOQ","executionInfo":{"status":"ok","timestamp":1675839223280,"user_tz":-540,"elapsed":288,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":401,"outputs":[]},{"cell_type":"code","source":["print(\"linear_rmse: %s\" % np.sqrt(rmse_lin))\n","print(\"linear_r2_score: %s\" % r2_lin)\n","df_acc_lin.head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"2vm0YtLGHawA","executionInfo":{"status":"ok","timestamp":1675839225087,"user_tz":-540,"elapsed":283,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"e8359581-dd8a-40cf-da45-be623b32e939"},"execution_count":402,"outputs":[{"output_type":"stream","name":"stdout","text":["linear_rmse: 6478.839267839572\n","linear_r2_score: 0.6073\n"]},{"output_type":"execute_result","data":{"text/plain":["                Player  salary        y_pred\n","14        Bradley Beal   43279  23885.806739\n","15       Tobias Harris   37633  18161.967774\n","17         Luka Don?i?   37097  33974.025126\n","26  Kristaps Porzi??is   33833  29510.570786\n","19         CJ McCollum   33333  24604.336190\n","34      Brandon Ingram   31651  24088.142621\n","37       Jalen Brunson   27733  12985.088900\n","4       Draymond Green   25806  12769.995015\n","23         Buddy Hield   21178  15260.655345\n","10   Spencer Dinwiddie   20171  14096.409509\n","62          OG Anunoby   17357  17345.082034\n","56    Danilo Gallinari   16908  13364.326990\n","6        Marcus Morris   16372  17527.132564\n","43        Jusuf Nurki?   15625  15601.413071\n","1         Derrick Rose   14521  14052.201983"],"text/html":["\n","  <div id=\"df-23cfb4dd-cf94-48a5-b76f-a4b4a6ddef50\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>salary</th>\n","      <th>y_pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14</th>\n","      <td>Bradley Beal</td>\n","      <td>43279</td>\n","      <td>23885.806739</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Tobias Harris</td>\n","      <td>37633</td>\n","      <td>18161.967774</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Luka Don?i?</td>\n","      <td>37097</td>\n","      <td>33974.025126</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Kristaps Porzi??is</td>\n","      <td>33833</td>\n","      <td>29510.570786</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>CJ McCollum</td>\n","      <td>33333</td>\n","      <td>24604.336190</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Brandon Ingram</td>\n","      <td>31651</td>\n","      <td>24088.142621</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Jalen Brunson</td>\n","      <td>27733</td>\n","      <td>12985.088900</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Draymond Green</td>\n","      <td>25806</td>\n","      <td>12769.995015</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Buddy Hield</td>\n","      <td>21178</td>\n","      <td>15260.655345</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Spencer Dinwiddie</td>\n","      <td>20171</td>\n","      <td>14096.409509</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>OG Anunoby</td>\n","      <td>17357</td>\n","      <td>17345.082034</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Danilo Gallinari</td>\n","      <td>16908</td>\n","      <td>13364.326990</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Marcus Morris</td>\n","      <td>16372</td>\n","      <td>17527.132564</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Jusuf Nurki?</td>\n","      <td>15625</td>\n","      <td>15601.413071</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Derrick Rose</td>\n","      <td>14521</td>\n","      <td>14052.201983</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23cfb4dd-cf94-48a5-b76f-a4b4a6ddef50')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-23cfb4dd-cf94-48a5-b76f-a4b4a6ddef50 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-23cfb4dd-cf94-48a5-b76f-a4b4a6ddef50');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":402}]},{"cell_type":"code","source":["y_pred_rid, rmse_rid, r2_rid, df_acc_rid = alg_fit(Ridge(alpha = 1), X_train, y_train, X_test, 'Player', 'salary',\n","                                                  df, metrics.mean_squared_error, metrics.r2_score)\n","\n","print(\"ridge_rmse: %s\" % np.sqrt(rmse_rid))\n","print(\"ridge_r2_score: %s\" % r2_rid)\n","df_acc_rid.head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"NT7xhr-FOWEl","executionInfo":{"status":"ok","timestamp":1675839512469,"user_tz":-540,"elapsed":291,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"6be729ea-3b63-4faa-a7ff-16aab64c3592"},"execution_count":404,"outputs":[{"output_type":"stream","name":"stdout","text":["ridge_rmse: 6536.1200773624105\n","ridge_r2_score: 0.6003\n"]},{"output_type":"execute_result","data":{"text/plain":["                Player  salary        y_pred\n","14        Bradley Beal   43279  23764.820938\n","15       Tobias Harris   37633  18703.052982\n","17         Luka Don?i?   37097  34961.230250\n","26  Kristaps Porzi??is   33833  28633.858999\n","19         CJ McCollum   33333  24175.805328\n","34      Brandon Ingram   31651  23774.087474\n","37       Jalen Brunson   27733  12805.690543\n","4       Draymond Green   25806  11991.498173\n","23         Buddy Hield   21178  14610.422754\n","10   Spencer Dinwiddie   20171  14330.438421\n","62          OG Anunoby   17357  17408.041329\n","56    Danilo Gallinari   16908  13681.692410\n","6        Marcus Morris   16372  17813.889588\n","43        Jusuf Nurki?   15625  16390.682193\n","1         Derrick Rose   14521  14638.253978"],"text/html":["\n","  <div id=\"df-cd508618-21d6-4319-b8e7-82c6346f7e5a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>salary</th>\n","      <th>y_pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14</th>\n","      <td>Bradley Beal</td>\n","      <td>43279</td>\n","      <td>23764.820938</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Tobias Harris</td>\n","      <td>37633</td>\n","      <td>18703.052982</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Luka Don?i?</td>\n","      <td>37097</td>\n","      <td>34961.230250</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Kristaps Porzi??is</td>\n","      <td>33833</td>\n","      <td>28633.858999</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>CJ McCollum</td>\n","      <td>33333</td>\n","      <td>24175.805328</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Brandon Ingram</td>\n","      <td>31651</td>\n","      <td>23774.087474</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Jalen Brunson</td>\n","      <td>27733</td>\n","      <td>12805.690543</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Draymond Green</td>\n","      <td>25806</td>\n","      <td>11991.498173</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Buddy Hield</td>\n","      <td>21178</td>\n","      <td>14610.422754</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Spencer Dinwiddie</td>\n","      <td>20171</td>\n","      <td>14330.438421</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>OG Anunoby</td>\n","      <td>17357</td>\n","      <td>17408.041329</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Danilo Gallinari</td>\n","      <td>16908</td>\n","      <td>13681.692410</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Marcus Morris</td>\n","      <td>16372</td>\n","      <td>17813.889588</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Jusuf Nurki?</td>\n","      <td>15625</td>\n","      <td>16390.682193</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Derrick Rose</td>\n","      <td>14521</td>\n","      <td>14638.253978</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd508618-21d6-4319-b8e7-82c6346f7e5a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cd508618-21d6-4319-b8e7-82c6346f7e5a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cd508618-21d6-4319-b8e7-82c6346f7e5a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":404}]},{"cell_type":"code","source":["y_pred_las, rmse_las, r2_las, df_acc_las = alg_fit(Lasso(alpha = 0.001), X_train, y_train, X_test, 'Player', 'salary',\n","                                                  df, metrics.mean_squared_error, metrics.r2_score)\n","\n","print(\"lasso_rmse: %s\" % np.sqrt(rmse_las))\n","print(\"lasso_r2_score: %s\" % r2_las)\n","df_acc_las.head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"1h1jo2VmQJ4i","executionInfo":{"status":"ok","timestamp":1675839515010,"user_tz":-540,"elapsed":383,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"14440451-a5cc-4d43-ae52-effedb6ccf2a"},"execution_count":405,"outputs":[{"output_type":"stream","name":"stdout","text":["lasso_rmse: 6504.787579460224\n","lasso_r2_score: 0.6041\n"]},{"output_type":"execute_result","data":{"text/plain":["                Player  salary        y_pred\n","14        Bradley Beal   43279  23514.979243\n","15       Tobias Harris   37633  18688.171646\n","17         Luka Don?i?   37097  34595.218366\n","26  Kristaps Porzi??is   33833  29248.365619\n","19         CJ McCollum   33333  24134.534663\n","34      Brandon Ingram   31651  23167.389034\n","37       Jalen Brunson   27733  12922.101477\n","4       Draymond Green   25806  12453.401386\n","23         Buddy Hield   21178  14901.583325\n","10   Spencer Dinwiddie   20171  14024.691267\n","62          OG Anunoby   17357  17265.116442\n","56    Danilo Gallinari   16908  13386.783432\n","6        Marcus Morris   16372  17980.607654\n","43        Jusuf Nurki?   15625  15468.666671\n","1         Derrick Rose   14521  13770.589702"],"text/html":["\n","  <div id=\"df-be34a97c-3450-4ff2-bbe3-2e678e6deda1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>salary</th>\n","      <th>y_pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14</th>\n","      <td>Bradley Beal</td>\n","      <td>43279</td>\n","      <td>23514.979243</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Tobias Harris</td>\n","      <td>37633</td>\n","      <td>18688.171646</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Luka Don?i?</td>\n","      <td>37097</td>\n","      <td>34595.218366</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Kristaps Porzi??is</td>\n","      <td>33833</td>\n","      <td>29248.365619</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>CJ McCollum</td>\n","      <td>33333</td>\n","      <td>24134.534663</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Brandon Ingram</td>\n","      <td>31651</td>\n","      <td>23167.389034</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Jalen Brunson</td>\n","      <td>27733</td>\n","      <td>12922.101477</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Draymond Green</td>\n","      <td>25806</td>\n","      <td>12453.401386</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Buddy Hield</td>\n","      <td>21178</td>\n","      <td>14901.583325</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Spencer Dinwiddie</td>\n","      <td>20171</td>\n","      <td>14024.691267</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>OG Anunoby</td>\n","      <td>17357</td>\n","      <td>17265.116442</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Danilo Gallinari</td>\n","      <td>16908</td>\n","      <td>13386.783432</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Marcus Morris</td>\n","      <td>16372</td>\n","      <td>17980.607654</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Jusuf Nurki?</td>\n","      <td>15625</td>\n","      <td>15468.666671</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Derrick Rose</td>\n","      <td>14521</td>\n","      <td>13770.589702</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be34a97c-3450-4ff2-bbe3-2e678e6deda1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-be34a97c-3450-4ff2-bbe3-2e678e6deda1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-be34a97c-3450-4ff2-bbe3-2e678e6deda1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":405}]},{"cell_type":"code","source":["from sklearn import tree\n","from sklearn.tree import DecisionTreeRegressor\n","\n","def RegEvaluation(model, ytest, xtest, nameindex, yname,totaldt, predict=True):\n","    ypred = model.predict(xtest)\n","    xtest['Pred_Y'] = model.predict(xtest)\n","    dt = pd.merge(totaldt,xtest,how = 'right')\n","    xtest.drop(['Pred_Y'],axis=1,inplace=True)\n","    dt = dt[[nameindex, yname,'Pred_Y']]\n","    dt.sort_values(by = yname, ascending = False,inplace=True)\n","    rmse = np.sqrt(mean_squared_error(ytest, ypred))\n","    r2 = r2_score(ytest, ypred)\n","    print('RMSE is', rmse)\n","    print('R sequared is', r2)\n","    if predict:\n","        return dt.head(15)"],"metadata":{"id":"r0nJ4BymWBGY","executionInfo":{"status":"ok","timestamp":1675839517484,"user_tz":-540,"elapsed":399,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":406,"outputs":[]},{"cell_type":"code","source":["clf = tree.DecisionTreeRegressor(max_depth=4, criterion=\"mse\") \n","dtree = clf.fit(X_train, y_train)\n","\n","RegEvaluation(dtree, y_test, X_test, 'Player', 'salary',df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"Rvo3iuMXZi6C","executionInfo":{"status":"ok","timestamp":1675839518833,"user_tz":-540,"elapsed":2,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"78bf9e58-e14b-49b1-c740-52ffc5b4dd14"},"execution_count":407,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE is 8114.679660361885\n","R sequared is 0.3839336628256115\n"]},{"output_type":"execute_result","data":{"text/plain":["                Player  salary        Pred_Y\n","14        Bradley Beal   43279  33517.666667\n","15       Tobias Harris   37633  18371.666667\n","17         Luka Don?i?   37097  12119.000000\n","26  Kristaps Porzi??is   33833  33517.666667\n","19         CJ McCollum   33333  14377.625000\n","34      Brandon Ingram   31651  42317.833333\n","37       Jalen Brunson   27733  10730.000000\n","4       Draymond Green   25806   5225.325581\n","23         Buddy Hield   21178  10730.000000\n","10   Spencer Dinwiddie   20171  10730.000000\n","62          OG Anunoby   17357  10730.000000\n","56    Danilo Gallinari   16908  25911.000000\n","6        Marcus Morris   16372  25911.000000\n","43        Jusuf Nurki?   15625  28947.000000\n","1         Derrick Rose   14521  14377.625000"],"text/html":["\n","  <div id=\"df-0b51c098-1183-4f9e-b779-064d547cadb5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>salary</th>\n","      <th>Pred_Y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14</th>\n","      <td>Bradley Beal</td>\n","      <td>43279</td>\n","      <td>33517.666667</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Tobias Harris</td>\n","      <td>37633</td>\n","      <td>18371.666667</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Luka Don?i?</td>\n","      <td>37097</td>\n","      <td>12119.000000</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Kristaps Porzi??is</td>\n","      <td>33833</td>\n","      <td>33517.666667</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>CJ McCollum</td>\n","      <td>33333</td>\n","      <td>14377.625000</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Brandon Ingram</td>\n","      <td>31651</td>\n","      <td>42317.833333</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Jalen Brunson</td>\n","      <td>27733</td>\n","      <td>10730.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Draymond Green</td>\n","      <td>25806</td>\n","      <td>5225.325581</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Buddy Hield</td>\n","      <td>21178</td>\n","      <td>10730.000000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Spencer Dinwiddie</td>\n","      <td>20171</td>\n","      <td>10730.000000</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>OG Anunoby</td>\n","      <td>17357</td>\n","      <td>10730.000000</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Danilo Gallinari</td>\n","      <td>16908</td>\n","      <td>25911.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Marcus Morris</td>\n","      <td>16372</td>\n","      <td>25911.000000</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Jusuf Nurki?</td>\n","      <td>15625</td>\n","      <td>28947.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Derrick Rose</td>\n","      <td>14521</td>\n","      <td>14377.625000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b51c098-1183-4f9e-b779-064d547cadb5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0b51c098-1183-4f9e-b779-064d547cadb5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0b51c098-1183-4f9e-b779-064d547cadb5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":407}]},{"cell_type":"code","source":["values = sorted(zip(X_train.columns, clf.feature_importances_), key=lambda x: x[1] * -1)\n","imp = pd.DataFrame(values,columns = [\"Name\", \"Score\"])\n","imp.sort_values(by = 'Score',inplace = True)\n","plt.figure(figsize=(10, 10))\n","sns.scatterplot(x='Score',y='Name',linewidth=0,\n","                data=imp,s = 30, color='red').set(\n","    xlabel='Importance', \n","    ylabel='Variables')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":624},"id":"-2gWp241Vn9R","executionInfo":{"status":"ok","timestamp":1675839521565,"user_tz":-540,"elapsed":685,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"4b9bafbb-cd02-4be4-e8f9-4d0f16d26210"},"execution_count":408,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0, 0.5, 'Variables'), Text(0.5, 0, 'Importance')]"]},"metadata":{},"execution_count":408},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from sklearn.ensemble import AdaBoostRegressor\n","reg = AdaBoostRegressor(DecisionTreeRegressor(max_depth=4),\n","                          n_estimators=500)\n","adaboost = reg.fit(X_train, y_train)\n","\n","RegEvaluation(adaboost, y_test, X_test, 'Player', 'salary',df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"BvvFEiQza0Yh","executionInfo":{"status":"ok","timestamp":1675839525919,"user_tz":-540,"elapsed":1589,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"7883737f-b43b-4c17-a6b3-459f277a3688"},"execution_count":409,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE is 5694.616858195303\n","R sequared is 0.6966012845355765\n"]},{"output_type":"execute_result","data":{"text/plain":["                Player  salary        Pred_Y\n","14        Bradley Beal   43279  30734.338710\n","15       Tobias Harris   37633  22600.000000\n","17         Luka Don?i?   37097  23637.261905\n","26  Kristaps Porzi??is   33833  27300.000000\n","19         CJ McCollum   33333  24830.068493\n","34      Brandon Ingram   31651  29656.305556\n","37       Jalen Brunson   27733  17521.000000\n","4       Draymond Green   25806  12120.758621\n","23         Buddy Hield   21178  12709.666667\n","10   Spencer Dinwiddie   20171  15398.902439\n","62          OG Anunoby   17357  18085.727273\n","56    Danilo Gallinari   16908  12296.876923\n","6        Marcus Morris   16372  13890.625000\n","43        Jusuf Nurki?   15625  20839.833333\n","1         Derrick Rose   14521  10505.365854"],"text/html":["\n","  <div id=\"df-77cd519d-7c51-4579-8901-1cdf18297d05\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>salary</th>\n","      <th>Pred_Y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14</th>\n","      <td>Bradley Beal</td>\n","      <td>43279</td>\n","      <td>30734.338710</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Tobias Harris</td>\n","      <td>37633</td>\n","      <td>22600.000000</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Luka Don?i?</td>\n","      <td>37097</td>\n","      <td>23637.261905</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Kristaps Porzi??is</td>\n","      <td>33833</td>\n","      <td>27300.000000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>CJ McCollum</td>\n","      <td>33333</td>\n","      <td>24830.068493</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Brandon Ingram</td>\n","      <td>31651</td>\n","      <td>29656.305556</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Jalen Brunson</td>\n","      <td>27733</td>\n","      <td>17521.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Draymond Green</td>\n","      <td>25806</td>\n","      <td>12120.758621</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Buddy Hield</td>\n","      <td>21178</td>\n","      <td>12709.666667</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Spencer Dinwiddie</td>\n","      <td>20171</td>\n","      <td>15398.902439</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>OG Anunoby</td>\n","      <td>17357</td>\n","      <td>18085.727273</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Danilo Gallinari</td>\n","      <td>16908</td>\n","      <td>12296.876923</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Marcus Morris</td>\n","      <td>16372</td>\n","      <td>13890.625000</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Jusuf Nurki?</td>\n","      <td>15625</td>\n","      <td>20839.833333</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Derrick Rose</td>\n","      <td>14521</td>\n","      <td>10505.365854</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77cd519d-7c51-4579-8901-1cdf18297d05')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-77cd519d-7c51-4579-8901-1cdf18297d05 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-77cd519d-7c51-4579-8901-1cdf18297d05');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":409}]},{"cell_type":"code","source":["values = sorted(zip(X_train.columns, reg.feature_importances_), key = lambda x: x[1] * -1)\n","imp = pd.DataFrame(values,columns = [\"Name\", \"Score\"])\n","imp.sort_values(by = 'Score',inplace = True)\n","plt.figure(figsize=(10, 10))\n","sns.scatterplot(x='Score',y='Name',linewidth=0,\n","                data=imp,s = 30, color='red').set(\n","    xlabel='Importance', \n","    ylabel='Variables')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":624},"id":"MFP5r3GxbE7h","executionInfo":{"status":"ok","timestamp":1675832945281,"user_tz":-540,"elapsed":583,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"2d4e97d1-f37a-46cc-ccca-eb78de9ef9b9"},"execution_count":299,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0, 0.5, 'Variables'), Text(0.5, 0, 'Importance')]"]},"metadata":{},"execution_count":299},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from sklearn.model_selection import KFold , cross_val_score\n","\n","def alg_fit_crossvalidation(alg, x, y, mse, r2):\n","    \n","    # Cross validation\n","    cv = KFold(shuffle = True, random_state = 0, n_splits = 5)\n","    \n","    # Accuracy\n","    scores1 = cross_val_score(alg, x, y, cv = cv, scoring = mse)\n","    scores2 = cross_val_score(alg, x, y, cv = cv, scoring = r2)\n","    acc1_cv = round(scores1.mean(), 4)\n","    acc2_cv = round(scores2.mean(), 4)\n","    \n","    return acc1_cv, acc2_cv"],"metadata":{"id":"sMBEfcR8arCh","executionInfo":{"status":"ok","timestamp":1675839581516,"user_tz":-540,"elapsed":272,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":410,"outputs":[]},{"cell_type":"code","source":["from xgboost import XGBRegressor\n","xgb = XGBRegressor(n_estimators = 300,\n","                   max_depth = 2,\n","                   min_child_weight = 0,\n","                   gamma = 8,\n","                   subsample = 0.6,\n","                   colsample_bytree = 0.9,\n","                   objective = 'reg:squarederror',\n","                   nthread = -1,\n","                   scale_pos_weight = 1,\n","                   seed = 27,\n","                   learning_rate = 0.02,\n","                   reg_alpha = 0.006)\n","\n","mse_cv_xgb, r2_cv_xgb = alg_fit_crossvalidation(xgb, X, y, 'neg_mean_squared_error', 'r2')\n","\n","print(\"Root Mean Squared Error: %s\" % round(np.sqrt(mse_cv_xgb*-1), 4))\n","print(\"R-squared: %s\" % r2_cv_xgb)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wzNO17uEaZqZ","executionInfo":{"status":"ok","timestamp":1675839585645,"user_tz":-540,"elapsed":2432,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"e001b4cd-0a53-4d90-f067-534c36ab5349"},"execution_count":411,"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared Error: 5594.2058\n","R-squared: 0.7152\n"]}]},{"cell_type":"code","source":["mod = xgb.fit(X, y)\n","\n","# Feature importance\n","df_feature_importance = pd.DataFrame(xgb.feature_importances_, index = X.columns, \n","                                     columns = ['feature importance']).sort_values('feature importance', \n","                                                                                   ascending = False)\n","df_feature_importance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"xiWZsu6Fb_Hp","executionInfo":{"status":"ok","timestamp":1675839612709,"user_tz":-540,"elapsed":417,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"3969a604-06b4-4024-fa29-7b39f0285e3e"},"execution_count":412,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        feature importance\n","PTS               0.170690\n","FTA               0.137575\n","FT                0.126459\n","FG                0.078497\n","2P                0.067660\n","FGA               0.060808\n","MP                0.060489\n","DRB               0.032011\n","Age               0.026234\n","AST               0.022833\n","2PA               0.021380\n","GS                0.019152\n","Pos_SF            0.018150\n","2P%               0.017032\n","3PA               0.016272\n","TRB               0.014104\n","3P                0.011789\n","TOV               0.011579\n","Pos_PG            0.010841\n","G                 0.010261\n","BLK               0.010080\n","STL               0.009783\n","ORB               0.009352\n","PF                0.009085\n","eFG%              0.008022\n","FT%               0.007450\n","3P%               0.006860\n","FG%               0.005550\n","Pos_C             0.000000\n","Pos_PF            0.000000\n","Pos_SG            0.000000"],"text/html":["\n","  <div id=\"df-a0f7f2f5-19d0-4a9a-982e-083866b954fa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>feature importance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PTS</th>\n","      <td>0.170690</td>\n","    </tr>\n","    <tr>\n","      <th>FTA</th>\n","      <td>0.137575</td>\n","    </tr>\n","    <tr>\n","      <th>FT</th>\n","      <td>0.126459</td>\n","    </tr>\n","    <tr>\n","      <th>FG</th>\n","      <td>0.078497</td>\n","    </tr>\n","    <tr>\n","      <th>2P</th>\n","      <td>0.067660</td>\n","    </tr>\n","    <tr>\n","      <th>FGA</th>\n","      <td>0.060808</td>\n","    </tr>\n","    <tr>\n","      <th>MP</th>\n","      <td>0.060489</td>\n","    </tr>\n","    <tr>\n","      <th>DRB</th>\n","      <td>0.032011</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>0.026234</td>\n","    </tr>\n","    <tr>\n","      <th>AST</th>\n","      <td>0.022833</td>\n","    </tr>\n","    <tr>\n","      <th>2PA</th>\n","      <td>0.021380</td>\n","    </tr>\n","    <tr>\n","      <th>GS</th>\n","      <td>0.019152</td>\n","    </tr>\n","    <tr>\n","      <th>Pos_SF</th>\n","      <td>0.018150</td>\n","    </tr>\n","    <tr>\n","      <th>2P%</th>\n","      <td>0.017032</td>\n","    </tr>\n","    <tr>\n","      <th>3PA</th>\n","      <td>0.016272</td>\n","    </tr>\n","    <tr>\n","      <th>TRB</th>\n","      <td>0.014104</td>\n","    </tr>\n","    <tr>\n","      <th>3P</th>\n","      <td>0.011789</td>\n","    </tr>\n","    <tr>\n","      <th>TOV</th>\n","      <td>0.011579</td>\n","    </tr>\n","    <tr>\n","      <th>Pos_PG</th>\n","      <td>0.010841</td>\n","    </tr>\n","    <tr>\n","      <th>G</th>\n","      <td>0.010261</td>\n","    </tr>\n","    <tr>\n","      <th>BLK</th>\n","      <td>0.010080</td>\n","    </tr>\n","    <tr>\n","      <th>STL</th>\n","      <td>0.009783</td>\n","    </tr>\n","    <tr>\n","      <th>ORB</th>\n","      <td>0.009352</td>\n","    </tr>\n","    <tr>\n","      <th>PF</th>\n","      <td>0.009085</td>\n","    </tr>\n","    <tr>\n","      <th>eFG%</th>\n","      <td>0.008022</td>\n","    </tr>\n","    <tr>\n","      <th>FT%</th>\n","      <td>0.007450</td>\n","    </tr>\n","    <tr>\n","      <th>3P%</th>\n","      <td>0.006860</td>\n","    </tr>\n","    <tr>\n","      <th>FG%</th>\n","      <td>0.005550</td>\n","    </tr>\n","    <tr>\n","      <th>Pos_C</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Pos_PF</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Pos_SG</th>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0f7f2f5-19d0-4a9a-982e-083866b954fa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a0f7f2f5-19d0-4a9a-982e-083866b954fa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a0f7f2f5-19d0-4a9a-982e-083866b954fa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":412}]},{"cell_type":"code","source":["X_final = X.loc[:,['PTS','FTA','FT','FG','2P','FGA','MP']]"],"metadata":{"id":"BickP0gHcJqR","executionInfo":{"status":"ok","timestamp":1675839713430,"user_tz":-540,"elapsed":1,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":423,"outputs":[]},{"cell_type":"code","source":["from scipy.stats.distributions import uniform\n","\n","params = {\n","    \"simpleimputer__strategy\": [\"median\", \"mean\"],\n","    \"xgbclassifier__max_depth\": [2, 4, 6],\n","    \"xgbclassifier__min_child_weight\": [2, 4, 8],\n","    \"xgbclassifier__colsample_bytree\": uniform(\n","        loc=0.5, scale=0.5\n","    ),  # 0.5 ~ 1 사이의 uniform 분포로 범위를 지정해 줍니다.\n","}"],"metadata":{"id":"w8-kIbOL1s5D","executionInfo":{"status":"ok","timestamp":1675839854557,"user_tz":-540,"elapsed":265,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":429,"outputs":[]},{"cell_type":"code","source":["from sklearn.pipeline import make_pipeline"],"metadata":{"id":"qThl_63O1zay"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import RandomizedSearchCV\n","\n","randomized_search = RandomizedSearchCV(\n","    param_distributions=params,\n","    scoring=\"roc_auc\",\n","    n_iter=10,\n","    cv=3,\n","    verbose=3,\n","    random_state=42,\n",")\n","randomized_search.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":248},"id":"z6tIOmfT1uVi","executionInfo":{"status":"error","timestamp":1675839911338,"user_tz":-540,"elapsed":263,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"f7bd465f-1780-43a3-ccd9-aa8b7ea183dd"},"execution_count":431,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-431-7ff04748bed6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel_selection\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mRandomizedSearchCV\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m randomized_search = RandomizedSearchCV(\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0mparam_distributions\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mscoring\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"roc_auc\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: __init__() missing 1 required positional argument: 'estimator'"]}]},{"cell_type":"code","source":["xgb_new = XGBRegressor(n_estimators = 300,\n","                       max_depth = 2,\n","                       min_child_weight = 0,\n","                       gamma = 8,\n","                       subsample = 0.7,\n","                       colsample_bytree = 0.9,\n","                       objective = 'reg:squarederror',\n","                       nthread = -1,\n","                       scale_pos_weight = 1,\n","                       seed = 27,\n","                       learning_rate = 0.023,\n","                       reg_alpha = 0.002)\n","\n","rmse_cv_xgb, r2_cv_xgb = alg_fit_crossvalidation(xgb_new, X_final, y, 'neg_mean_squared_error', 'r2')\n","\n","print(\"rmse: %s\" % round(np.sqrt(rmse_cv_xgb*-1), 4))\n","print(\"r2_score: %s\" % r2_cv_xgb)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"okwaR-RSc1lB","executionInfo":{"status":"ok","timestamp":1675839997309,"user_tz":-540,"elapsed":4939,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"87f961d0-f403-4ada-d246-9713a68e5c7b"},"execution_count":435,"outputs":[{"output_type":"stream","name":"stdout","text":["rmse: 6705.9916\n","r2_score: 0.5898\n"]}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X_final, y, test_size = 0.2, random_state = 2)"],"metadata":{"id":"Oiz7YK8mdKIx","executionInfo":{"status":"ok","timestamp":1675840069279,"user_tz":-540,"elapsed":598,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":436,"outputs":[]},{"cell_type":"code","source":["y_pred_xgb, rmse_xgb, r2_xgb, df_acc_xgb = alg_fit(xgb_new, X_train, y_train, X_test, 'Player','salary', \n","                                                  df, metrics.mean_squared_error, metrics.r2_score)"],"metadata":{"id":"19dVEj2ZdT_C","executionInfo":{"status":"ok","timestamp":1675840071898,"user_tz":-540,"elapsed":1393,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}}},"execution_count":437,"outputs":[]},{"cell_type":"code","source":["print(\"fianl_rmse: %s\" % round(np.sqrt(rmse_xgb), 4))\n","print(\"final_r2score: %s\" % r2_xgb)\n","df_acc_xgb.head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"mzzgz6tXdlLz","executionInfo":{"status":"ok","timestamp":1675840074228,"user_tz":-540,"elapsed":279,"user":{"displayName":"한윤섭","userId":"05571931480546042477"}},"outputId":"1be73a9f-db1a-42ad-8e9b-e817d4198c3e"},"execution_count":438,"outputs":[{"output_type":"stream","name":"stdout","text":["fianl_rmse: 6459.18\n","final_r2score: 0.6097\n"]},{"output_type":"execute_result","data":{"text/plain":["                Player  salary        y_pred\n","14        Bradley Beal   43279  32484.423828\n","15       Tobias Harris   37633  17343.800781\n","17         Luka Don?i?   37097  30062.906250\n","26  Kristaps Porzi??is   33833  28211.689453\n","19         CJ McCollum   33333  21032.919922\n","34      Brandon Ingram   31651  33270.121094\n","37       Jalen Brunson   27733  19600.015625\n","4       Draymond Green   25806   6645.562988\n","23         Buddy Hield   21178  14770.899414\n","10   Spencer Dinwiddie   20171  15272.090820\n","62          OG Anunoby   17357  15956.558594\n","56    Danilo Gallinari   16908  11939.206055\n","6        Marcus Morris   16372  13684.139648\n","43        Jusuf Nurki?   15625  23097.166016\n","1         Derrick Rose   14521  10087.748047"],"text/html":["\n","  <div id=\"df-cfc1933a-3a94-43fb-b9f7-7d006eb8a345\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Player</th>\n","      <th>salary</th>\n","      <th>y_pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14</th>\n","      <td>Bradley Beal</td>\n","      <td>43279</td>\n","      <td>32484.423828</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Tobias Harris</td>\n","      <td>37633</td>\n","      <td>17343.800781</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Luka Don?i?</td>\n","      <td>37097</td>\n","      <td>30062.906250</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Kristaps Porzi??is</td>\n","      <td>33833</td>\n","      <td>28211.689453</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>CJ McCollum</td>\n","      <td>33333</td>\n","      <td>21032.919922</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Brandon Ingram</td>\n","      <td>31651</td>\n","      <td>33270.121094</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Jalen Brunson</td>\n","      <td>27733</td>\n","      <td>19600.015625</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Draymond Green</td>\n","      <td>25806</td>\n","      <td>6645.562988</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Buddy Hield</td>\n","      <td>21178</td>\n","      <td>14770.899414</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Spencer Dinwiddie</td>\n","      <td>20171</td>\n","      <td>15272.090820</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>OG Anunoby</td>\n","      <td>17357</td>\n","      <td>15956.558594</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Danilo Gallinari</td>\n","      <td>16908</td>\n","      <td>11939.206055</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Marcus Morris</td>\n","      <td>16372</td>\n","      <td>13684.139648</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Jusuf Nurki?</td>\n","      <td>15625</td>\n","      <td>23097.166016</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Derrick Rose</td>\n","      <td>14521</td>\n","      <td>10087.748047</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cfc1933a-3a94-43fb-b9f7-7d006eb8a345')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cfc1933a-3a94-43fb-b9f7-7d006eb8a345 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cfc1933a-3a94-43fb-b9f7-7d006eb8a345');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":438}]}]}